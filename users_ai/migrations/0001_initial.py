# Generated by Django 5.2.1 on 2025-05-26 06:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('max_active_sessions', models.IntegerField(default=1)),
                ('session_duration_hours', models.IntegerField(default=24)),
                ('daily_message_limit', models.IntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='شماره موبایل')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='ایمیل')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
        ),
        migrations.CreateModel(
            name='AiResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_session_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('metis_session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ai_response_name', models.CharField(default='New AI Chat Session', max_length=255)),
                ('chat_history', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CareerEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_level', models.CharField(blank=True, max_length=100, null=True)),
                ('field_of_study', models.CharField(blank=True, max_length=200, null=True)),
                ('skills', models.TextField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=200, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('job_satisfaction', models.IntegerField(blank=True, null=True)),
                ('career_goals', models.TextField(blank=True, null=True)),
                ('work_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('learning_style', models.CharField(blank=True, max_length=100, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='career_education', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_city', models.CharField(blank=True, max_length=200, null=True)),
                ('climate', models.CharField(blank=True, max_length=100, null=True)),
                ('housing_type', models.CharField(blank=True, max_length=100, null=True)),
                ('tech_access', models.TextField(blank=True, null=True)),
                ('life_events', models.TextField(blank=True, null=True)),
                ('transportation', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='environmental_context', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackLearning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_text', models.TextField(blank=True, null=True)),
                ('interaction_type', models.CharField(blank=True, max_length=100, null=True)),
                ('interaction_rating', models.IntegerField(blank=True, null=True)),
                ('interaction_frequency', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_learning', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('savings', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('debts', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('investment_types', models.TextField(blank=True, null=True)),
                ('financial_goals', models.TextField(blank=True, null=True)),
                ('risk_tolerance', models.CharField(blank=True, max_length=50, null=True)),
                ('budgeting_habits', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('progress', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habit_name', models.CharField(max_length=200)),
                ('frequency', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('success_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('chronic_conditions', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('diet_type', models.CharField(blank=True, max_length=100, null=True)),
                ('daily_calorie_intake', models.IntegerField(blank=True, null=True)),
                ('physical_activity_level', models.CharField(blank=True, max_length=50, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('mental_health_status', models.TextField(blank=True, null=True)),
                ('sleep_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('last_checkup_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_record', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreferenceInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbies', models.TextField(blank=True, null=True)),
                ('favorite_music_genres', models.TextField(blank=True, null=True)),
                ('favorite_movies', models.TextField(blank=True, null=True)),
                ('reading_preferences', models.TextField(blank=True, null=True)),
                ('travel_preferences', models.TextField(blank=True, null=True)),
                ('food_preferences', models.TextField(blank=True, null=True)),
                ('lifestyle_choices', models.TextField(blank=True, null=True)),
                ('movie_fav_choices', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences_interests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PsychologicalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personality_type', models.CharField(blank=True, max_length=100, null=True)),
                ('core_values', models.TextField(blank=True, null=True)),
                ('motivations', models.TextField(blank=True, null=True)),
                ('decision_making_style', models.CharField(blank=True, max_length=100, null=True)),
                ('stress_response', models.TextField(blank=True, null=True)),
                ('emotional_triggers', models.TextField(blank=True, null=True)),
                ('preferred_communication', models.CharField(blank=True, max_length=100, null=True)),
                ('resilience_level', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='psych_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RealTimeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_location', models.CharField(blank=True, max_length=255, null=True)),
                ('current_mood', models.CharField(blank=True, max_length=100, null=True)),
                ('current_activity', models.CharField(blank=True, max_length=100, null=True)),
                ('daily_schedule', models.TextField(blank=True, null=True)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='realtime_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_relationships', models.TextField(blank=True, null=True)),
                ('relationship_status', models.CharField(blank=True, max_length=50, null=True)),
                ('communication_style', models.CharField(blank=True, max_length=100, null=True)),
                ('emotional_needs', models.TextField(blank=True, null=True)),
                ('social_frequency', models.CharField(blank=True, max_length=50, null=True)),
                ('conflict_resolution', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_relationship', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('languages', models.TextField(blank=True, null=True)),
                ('cultural_background', models.TextField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_psychological_test', models.TextField(blank=True, null=True)),
                ('user_information_summary', models.TextField(blank=True, null=True)),
                ('messages_sent_today', models.IntegerField(default=0)),
                ('last_message_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users_ai.userrole')),
            ],
        ),
    ]
